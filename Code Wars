Returns sum of positive numbers

def positive_sum(arr):
    arr = sum(x for x in arr if x > 0)
    return arr
    
    
    
Returns list counting down from n

def reverse_seq(n):
    if n > 0:
        return list(range(n,0,-1))
        
        
        
Returns True if number is divisible by both a  and b

def is_divide_by(number, a, b):
    if number % a == 0and number % b == 0:
        return True
    else:
        return False
        
        
        
Returns "Even" or "Odd"

def even_or_odd(number):
    if number % 2 == 0:
        return "Even"
    else:
        return "Odd"
        
        
        
Returns list of numbers ""n"" reverse

def digitize(n):
    return [int(x) for x in str(n)[::-1]]
    
    
    
Removes exclamation marks from string

def remove_exclamation_marks(s):
    return s.replace('!','')



Returns average of a given list

def find_average(numbers):
    summa = 0
    for i in numbers:
        summa = summa + i
        
    avg = summa / len(numbers)
    return avg
    
    
    
sum of a range a, b
def get_sum(a,b):
    return sum(range(min(a, b), max(a, b) + 1))
    
    
    
    
Return middle chracter(s) in a string

def get_middle(s):
    if len(s)%2==0:
        i = int(len(s)/2)-1
        return s[i]+s[i+1]
    else:
        return s[int(len(s)/2)]
        
        
        
Replace vowels in a string        

def disemvowel(s):
    for i in "aeiouAEIOU":
        s = s.replace(i,'')
    return s


Return all numbers as negative

def make_negative( number ):
    if number > 0:
        return (number - (number * 2))
    return number
    
    
    
Return a new list with the strings filtered out

def filter_list(l):
  return [x for x in l if type(x) is not str]
  
  
  
Return century given the year
  
def century(year):
    return (year + 99) // 100
    
    
    
    
rock, paper, scissors

def rps(p1, p2):
    beats = {'rock': 'scissors', 'scissors': 'paper', 'paper': 'rock'}
    if beats[p1] == p2:
        return "Player 1 won!"
    if beats[p2] == p1:
        return "Player 2 won!"
    return "Draw!"
    
    
    
Return an integer with its digits in descending order 

def descending_order(num):
    num = str(num)
    ordered = ''.join(sorted(num, reverse=True))
    return int(ordered)
    
    
    
    
    
Remove smallest value from list without changing the order

def remove_smallest(numbers):
    a = numbers[:]
    if a:
        a.remove(min(a))
    return a
    
    
    

def accum(s):
    return '-'.join(c.upper() + c.lower() * i for i, c in enumerate(s))
    
ahfhw
Aa Hhh Ffff Hhhhh Wwwwww


Return sum of two lowest numbers

def sum_two_smallest_numbers(numbers):
    return sum(sorted(numbers)[:2])
    
    
    
